{
  "manifest": {
    "name": "ethereumjs-vm",
    "version": "2.3.3",
    "description": "an ethereum VM implementation",
    "main": "index.js",
    "dependencies": {
      "async": "^2.1.2",
      "async-eventemitter": "^0.2.2",
      "ethereum-common": "0.2.0",
      "ethereumjs-account": "^2.0.3",
      "ethereumjs-block": "~1.7.0",
      "ethereumjs-util": "^5.1.3",
      "fake-merkle-patricia-tree": "^1.0.1",
      "functional-red-black-tree": "^1.0.1",
      "merkle-patricia-tree": "^2.1.2",
      "rustbn.js": "~0.1.1",
      "safe-buffer": "^5.1.1"
    },
    "devDependencies": {
      "babel-preset-es2015": "^6.24.0",
      "babelify": "^7.3.0",
      "ethereumjs-blockchain": "~2.1.0",
      "ethereumjs-testing": "https://github.com/ethereumjs/ethereumjs-testing",
      "ethereumjs-tx": "1.3.3",
      "level": "^1.4.0",
      "leveldown": "^1.4.6",
      "levelup": "^1.3.2",
      "memdown": "^1.1.0",
      "minimist": "^1.1.1",
      "standard": "^10.0.0",
      "tape": "4.6.3"
    },
    "browserify": {
      "transform": [
        [
          "babelify",
          {
            "presets": [
              "es2015"
            ]
          }
        ]
      ]
    },
    "scripts": {
      "testVM": "node ./tests/tester -v",
      "testState": "node ./tests/tester -s",
      "testBlockchain": "node --stack-size=1500 ./tests/tester -b --excludeDir='GeneralStateTests'",
      "testBlockchainGeneralStateTests": "node --stack-size=1500 ./tests/tester -b --dir='GeneralStateTests'",
      "testBlockchainBlockGasLimit": "node --stack-size=1500 ./tests/tester -b --dir='bcBlockGasLimitTest'",
      "testBlockchainValid": "node --stack-size=1500 ./tests/tester -b --dir='bcValidBlockTest'",
      "testBlockchainTotalDifficulty": "node --stack-size=1500 ./tests/tester -b --dir='bcTotalDifficultyTest'",
      "lint": "standard",
      "test": "node ./tests/tester -a"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ethereumjs/ethereumjs-vm.git"
    },
    "keywords": [
      "ethereum",
      "VM"
    ],
    "author": {
      "name": "mjbecze",
      "email": "mjbecze@gmail.com"
    },
    "contributors": [
      {
        "name": "Alex Beregszaszi",
        "email": "alex@rtfs.hu"
      }
    ],
    "license": "MPL-2.0",
    "bugs": {
      "url": "https://github.com/ethereumjs/ethereumjs-vm/issues"
    },
    "homepage": "https://github.com/ethereumjs/ethereumjs-vm",
    "standard": {
      "ignore": [
        "dist/**",
        "examples/runcode-browserify.js"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/salil007/.cache/yarn/v2/npm-ethereumjs-vm-2.3.3-05719139e0c4a59e829022964a6048b17d2d84b0/package.json",
    "readmeFilename": "README.md",
    "readme": "# SYNOPSIS\n\n[![NPM Package](https://img.shields.io/npm/v/ethereumjs-vm.svg?style=flat-square)](https://www.npmjs.org/package/ethereumjs-vm)\n[![Build Status](https://img.shields.io/travis/ethereumjs/ethereumjs-vm.svg?branch=master&style=flat-square)](https://travis-ci.org/ethereumjs/ethereumjs-vm)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/ethereumjs-lib.svg?style=flat-square)](https://gitter.im/ethereum/ethereumjs-lib) or #ethereumjs on freenode\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nImplements Ethereum's VM in Javascript.\n\n#### Fork Support\n\nThis library always only supports the currently active Ethereum mainnet fork rules with its latest release, old fork rules are dropped with new releases once a HF occured.\n\nThe current major [2.3.x](https://github.com/ethereumjs/ethereumjs-vm/releases) release series supports the  [Byzantium](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-609.md) fork changes. For a [Spurious Dragon](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-607.md) compatible version of this library install the latest of the ``2.2.x`` series (see [Changelog](./CHANGELOG.md)).\n\n# INSTALL\n`npm install ethereumjs-vm`\n\n# USAGE\n```javascript\nvar VM = require('ethereumjs-vm')\n\n//create a new VM instance\nvar vm = new VM()\nvar code = '7f4e616d65526567000000000000000000000000000000000000000000000000003055307f4e616d6552656700000000000000000000000000000000000000000000000000557f436f6e666967000000000000000000000000000000000000000000000000000073661005d2720d855f1d9976f88bb10c1a3398c77f5573661005d2720d855f1d9976f88bb10c1a3398c77f7f436f6e6669670000000000000000000000000000000000000000000000000000553360455560df806100c56000396000f3007f726567697374657200000000000000000000000000000000000000000000000060003514156053576020355415603257005b335415603e5760003354555b6020353360006000a233602035556020353355005b60007f756e72656769737465720000000000000000000000000000000000000000000060003514156082575033545b1560995733335460006000a2600033545560003355005b60007f6b696c6c00000000000000000000000000000000000000000000000000000000600035141560cb575060455433145b1560d25733ff5b6000355460005260206000f3'\n\nvm.runCode({\n  code: Buffer.from(code, 'hex'), // code needs to be a Buffer\n  gasLimit: Buffer.from('ffffffff', 'hex')\n}, function(err, results){\n  console.log('returned: ' + results.return.toString('hex'));\n})\n```\nAlso more examples can be found here\n- [examples](./examples)\n- [old blog post](https://wanderer.github.io/ethereum/nodejs/code/2014/08/12/running-contracts-with-vm/)\n\n# BROWSER\n\nTo build for standalone use in the browser, install `browserify` and check [run-transactions-simple example](https://github.com/ethereumjs/ethereumjs-vm/tree/master/examples/run-transactions-simple). This will give you a global variable `EthVM` to use. The generated file will be at `./examples/run-transactions-simple/build.js`.\n\n# API\n  - [`new VM([opts])`](#new-vmstatetrie-blockchain)\n  - [`VM` methods](#vm-methods)\n    - [`vm.runBlockchain([blockchain], [cb])`](#vmrunblockchainblockchain-cb)\n    - [`vm.runBlock(opts, cb)`](#vmrunblockopts-cb)\n    - [`vm.runTx(opts, cb)`](#vmruntxopts-cb)\n    - [`vm.runCode(opts, cb)`](#vmruncodeopts-cb)\n    - [`vm.generateCanonicalGenesis(cb)`](#vmgeneratecanonicalgenesiscb)\n    - [`vm.generateGenesis(cb)`](#vmgenerategenesiscb)\n  - [`VM` debugging hooks](#vm-debugging-hooks)\n    - [`vm.onStep`](#vmonstep)\n\n### `new VM([StateTrie], [blockchain])`\nCreates a new VM object\n- `StateTrie` - The [Patricia Merkle Tree](https://github.com/wanderer/merkle-patricia-tree) that contains the state. If no trie is given the `VM` will create an in memory trie.\n- `blockchain` - an instance of the [`Blockchain`](https://github.com/ethereum/ethereumjs-lib/blob/master/docs/blockchain.md). If no blockchain is given a fake blockchain will be used.\n- `opts`\n  - `state` - the state trie\n  - `blockchain` - an instance of ethereumjs-blockchain\n  - `activatePrecompiles` - create entries in the state tree for the precompiled contracts\n\n### `VM` methods\n\n\n#### `vm.runBlockchain(blockchain, cb)`\nProcess blocks and adds them to the blockchain.\n- `blockchain` - A [blockchain](https://github.com/ethereum/ethereumjs-blockchain) that to process\n- `cb` - The callback. It is given an err parameter if it fails\n\n--------------------------------------------------------\n\n#### `vm.runBlock(opts, cb)`\nProcesses the `block` running all of the transactions it contains and updating the miner's account.\n- `opts.block` - The [`Block`](https://github.com/ethereumjs/ethereumjs-block) to process\n- `opts.generate` - a `Boolean`; whether to generate the stateRoot. If false  `runBlock` will check the stateRoot of the block against the Trie\n- `cb` - The callback. It is given two arguments, an `error` string containing an error that may have happened or `null`, and a `results` object with the following properties:\n  - `receipts` - the receipts from the transactions in the block\n  - `results` - an Array for results from the transactions in the block\n--------------------------------------------------------\n\n\n#### `vm.runTx(opts, cb)`\nProcess a transaction.\n- `opts.tx` - A [`Transaction`](https://github.com/ethereum/ethereumjs-tx) to run.\n- `opts.block` - The block to which the `tx` belongs. If omitted a blank block will be used.\n- `cb` - The callback. It is given two arguments, an `error` string containing an error that may have happened or `null`, and a `results` object with the following properties:\n  - `amountSpent` - the amount of ether used by this transaction as a `bignum`\n  - `gasUsed` - the amount of gas used by the transaction\n  - `vm` - contains the results from running the code, if any, as described in [`vm.runCode(params, cb)`](#vmruncodeopts-cb)\n\n--------------------------------------------------------\n\n#### `vm.runCode(opts, cb)`\nRuns EVM code\n- `opts.code` - The EVM code to run given as a `Buffer`\n- `opts.data` - The input data given as a `Buffer`\n- `opts.value` - The value in ether that is being sent to `opt.address`. Defaults to `0`\n- `opts.block` - The [`Block`](https://github.com/ethereumjs/ethereumjs-block) the `tx` belongs to. If omitted a blank block will be used.\n- `opts.gasLimit` - The gas limit for the code given as a `Buffer`\n- `opts.account` - The [`Account`](https://github.com/ethereumjs/ethereumjs-account) that the executing code belongs to. If omitted an empty account will be used\n- `opts.address` - The address of the account that is executing this code. The address should be a `Buffer` of bytes. Defaults to `0`\n- `opts.origin` - The address where the call originated from. The address should be a `Buffer` of 20bits. Defaults to `0`\n- `opts.caller` - The address that ran this code. The address should be a `Buffer` of 20bits. Defaults to `0`\n- `cb` - The callback. It is given two arguments, an `error` string containing an error that may have happened or `null` and a `results` object with the following properties\n  - `gas` - the amount of gas left as a `bignum`\n  - `gasUsed` - the amount of gas as a `bignum` the code used to run.\n  - `gasRefund` - a `Bignum` containing the amount of gas to refund from deleting storage values\n  - `selfdestruct` - an `Object` with keys for accounts that have selfdestructed and values for balance transfer recipient accounts.\n  - `logs` - an `Array` of logs that the contract emitted.\n  - `exception` - `0` if the contract encountered an exception, `1` otherwise.\n  - `exceptionError` - a `String` describing the exception if there was one.\n  - `return` - a `Buffer` containing the value that was returned by the contract\n\n\n--------------------------------------------------------\n\n#### `vm.stateManager.generateCanonicalGenesis(cb)`\nGenerates the Canonical genesis state.\n\n--------------------------------------------------------\n\n#### `vm.stateManager.generateGenesis(genesisData, cb)`\nGenerate the genesis state.\n- `genesisData` - an `Object` whose keys are addresses and values are `string`s representing initial allocation of ether.\n- `cb` - The callback\n\n```javascript\nvar genesisData = {\n  \"51ba59315b3a95761d0863b05ccc7a7f54703d99\": \"1606938044258990275541962092341162602522202993782792835301376\",\n  \"e4157b34ea9615cfbde6b4fda419828124b70c78\": \"1606938044258990275541962092341162602522202993782792835301376\"\n}\n\nvm.generateGenesis(genesisData, function(){\n  console.log('generation done');\n})\n```\n\n### `events`\nAll events are instances of [async-eventemmiter](https://www.npmjs.com/package/async-eventemitter). If an event handler has an arity of 2 the VM will pause until the callback is called\n\n#### `step`\nThe `step` event is given an `Object` and callback. The `Object` has the following properties.\n- `pc` - a `Number` representing the program counter\n- `opcode` - the next opcode to be ran\n- `gasLeft` - a `bignum` standing for the amount of gasLeft\n- `stack` - an `Array` of `Buffers` containing the stack.\n- `storageTrie` - the storage [trie](https://github.com/wanderer/merkle-patricia-tree) for the account\n- `account` - the [`Account`](https://github.com/ethereum/ethereumjs-account) which owns the code running.\n- `address` - the address of the `account`\n- `depth` - the current number of calls deep the contract is\n- `memory` - the memory of the VM as a `buffer`\n- `cache` - The account cache. Contains all the accounts loaded from the trie. It is an instance of [functional red black tree](https://www.npmjs.com/package/functional-red-black-tree)\n\n#### `beforeBlock`\nEmits the block that is about to be processed.\n\n#### `afterBlock`\nEmits the results of the processing a block.\n\n#### `beforeTx`\nEmits the Transaction that is about to be processed.\n\n#### `afterTx`\nEmits the result of the transaction.\n\n\n# Internal Structure\nThe VM processes state changes at many levels.\n\n* runBlockchain\n  * for every block, runBlock\n* runBlock\n  * for every tx, runTx\n  * pay miner and uncles\n* runTx\n  * check sender balance\n  * check sender nonce\n  * runCall\n  * transfer gas charges\n* runCall\n  * checkpoint state\n  * transfer value\n  * load code\n  * runCode\n  * materialize created contracts\n  * revert or commit checkpoint\n* runCode\n  * iterate over code\n  * run op codes\n  * track gas usage\n* OpFns\n  * run individual op code\n  * modify stack\n  * modify memory\n  * calculate fee\n\nThe opFns for `CREATE`, `CALL`, and `CALLCODE` call back up to `runCall`.\n\n\n# TESTING\n\n### Running Tests\n\nTests can be found in the ``tests`` directory, with ``FORK_CONFIG`` set in ``tests/tester.js``. There are test runners for [State tests](http://www.ethdocs.org/en/latest/contracts-and-transactions/ethereum-tests/state_tests/index.html) and [Blockchain tests](http://www.ethdocs.org/en/latest/contracts-and-transactions/ethereum-tests/blockchain_tests/index.html). VM tests are disabled since Frontier gas costs are not supported any more. Tests are then executed by the [ethereumjs-testing](https://github.com/ethereumjs/ethereumjs-testing) utility library using the official client-independent [Ethereum tests](https://github.com/ethereum/tests).\n\nFor a wider picture about how to use tests to implement EIPs you can have a look at this [reddit post](https://www.reddit.com/r/ethereum/comments/6kc5g3/ethereumjs_team_is_seeking_contributors/)\nor the associated YouTube video introduction to [core development with Ethereumjs-vm](https://www.youtube.com/watch?v=L0BVDl6HZzk&feature=youtu.be).\n\n#### Running different Test Types\n\nRunning all the tests:\n\n`npm test`\n\nRunning the State tests:\n\n`node ./tests/tester -s`\n\nRunning the Blockchain tests:\n\n`node ./tests/tester -b`\n\nState tests run significantly faster than Blockchain tests, so it is often a good choice to start fixing State tests.\n\n#### Running Specific Tests\n\nRunning all the blockchain tests in a file:\n\n`node ./tests/tester -b --file='randomStatetest303'`\n\nRunning tests from a specific directory:\n\n`node ./tests/tester -b --dir='bcBlockGasLimitTest'`\n\nRunning a specific state test case:\n\n`node ./tests/tester -s --test='stackOverflow'`\n\nOnly run test cases with selected ``data``, ``gas`` and/or ``value`` values (see \n[attribute description](http://ethereum-tests.readthedocs.io/en/latest/test_types/state_tests.html) in \ntest docs), provided by the index of the array element in the test ``transaction`` section:\n\n`node tests/tester -s --test='CreateCollisionToEmpty' --data=0 --gas=1 --value=0`\n\nRun a state test from a specified source file not under the ``tests`` directory:\n`node ./tests/tester -s --customStateTest='{path_to_file}'`\n\n#### Skipping Tests\n\nThere are three types of skip lists (``BROKEN``, ``PERMANENT`` and ``SLOW``) which\ncan be found in ``tests/tester.js``. By default tests from all skip lists are omitted.\n\nYou can change this behaviour with:\n\n`node tests/tester -s --skip=BROKEN,PERMANENT`\n\nto skip only the ``BROKEN`` and ``PERMANENT`` tests and include the ``SLOW`` tests.\nThere are also the keywords ``NONE`` or ``ALL`` for convenience.\n\nIt is also possible to only run the tests from the skip lists:\n\n`node tests/tester -s --runSkipped=SLOW`\n\n### Debugging\n\n#### Local Debugging\n\nFor state tests you can use the ``--jsontrace`` flag to output opcode trace information.\n\nBlockchain tests support `--debug` to verify the postState:\n\n`node ./tests/tester -b  --debug --test='ZeroValue_SELFDESTRUCT_ToOneStorageKey_OOGRevert_d0g0v0_EIP158'`\n\nAll/most State tests are replicated as Blockchain tests in a ``GeneralStateTests`` [sub directory](https://github.com/ethereum/tests/tree/develop/BlockchainTests/GeneralStateTests) in the Ethereum tests repo, so for debugging single test cases the Blockchain test version of the State test can be used.\n\n#### Debugging Tools\n\nFor comparing ``EVM`` traces [here](https://gist.github.com/cdetrio/41172f374ae32047a6c9e97fa9d09ad0) are some instructions for setting up ``pyethereum`` to generate corresponding traces for state tests.\n\nCompare TAP output from blockchain/state tests and produces concise diff of the differences between them (example):\n\n```\ncurl https://gist.githubusercontent.com/jwasinger/6cef66711b5e0787667ceb3db6bea0dc/raw/0740f03b4ce90d0955d5aba1e0c30ce698c7145a/gistfile1.txt > output-wip-byzantium.txt\ncurl https://gist.githubusercontent.com/jwasinger/e7004e82426ff0a7137a88d273f11819/raw/66fbd58722747ebe4f7006cee59bbe22461df8eb/gistfile1.txt > output-master.txt\npython utils/diffTestOutput.py output-wip-byzantium.txt output-master.txt\n```\n\nAn extremely rich and powerful toolbox is the [evmlab](https://github.com/holiman/evmlab) from ``holiman``, both for debugging and creating new test cases or example data.\n\n\n# LICENSE\n[MPL-2.0](https://www.mozilla.org/MPL/2.0/)\n",
    "licenseText": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ethereumjs-vm/-/ethereumjs-vm-2.3.3.tgz#05719139e0c4a59e829022964a6048b17d2d84b0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ethereumjs-vm/-/ethereumjs-vm-2.3.3.tgz",
    "hash": "05719139e0c4a59e829022964a6048b17d2d84b0",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "05719139e0c4a59e829022964a6048b17d2d84b0"
}