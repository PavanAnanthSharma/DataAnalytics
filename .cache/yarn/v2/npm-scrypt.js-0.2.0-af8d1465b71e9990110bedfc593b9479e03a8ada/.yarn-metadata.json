{
  "manifest": {
    "name": "scrypt.js",
    "version": "0.2.0",
    "description": "Scrypt in Node.js and in the browser. Fast & simple.",
    "main": "node.js",
    "scripts": {
      "test": "exit 0"
    },
    "author": {
      "name": "Alex Beregszaszi",
      "email": "alex@rtfs.hu"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/axic/scryptjs"
    },
    "keywords": [
      "crypto",
      "scrypt",
      "hash",
      "kdf"
    ],
    "license": "MIT",
    "dependencies": {
      "scryptsy": "^1.2.1",
      "scrypt": "^6.0.2"
    },
    "browser": "js.js",
    "_registry": "npm",
    "_loc": "/home/salil007/.cache/yarn/v2/npm-scrypt.js-0.2.0-af8d1465b71e9990110bedfc593b9479e03a8ada/package.json",
    "readmeFilename": "README.md",
    "readme": "# scrypt.js\n\nThis purpose of this library is to provide a single interface to both a C and a pure Javascript based scrypt implementation.\nSupports browserify and will select the best option when running under Node or in the browser.\n\nIt is using the following two underlying implementations:\n- [scryptsy](https://github.com/cryptocoinjs/scryptsy) for the pure Javascript implementation\n- [scrypt](https://www.npmjs.com/package/scrypt) for the C version\n\nIt only supports hashing. Doesn't offer an async option and doesn't implement the HMAC format. If you are looking for those,\nplease use the Node `scrypt` library.\n\n## API\n\nThere is only one method returned for hashing using scrypt. All parameters are mandatory except the progress callback:\n- `key` - The key/passphrase. Although it accepts a String, please use a Buffer to avoid problems later.\n- `salt` - The salt. Same as with the `key`, please try to use a Buffer.\n- `n` - Iteration count.\n- `r` - Block size for the underlying hash.\n- `p` - Parallelization factor.\n- `dklen` - The derived key length aka. output size.\n\n## Example usage\n\n```js\n// Load default implementation\nvar scrypt = require('scrypt.js')\n\n// Load specific version\nvar scrypt = require('scrypt.js/js') // pure Javascript\nvar scrypt = require('scrypt.js/node') // C on Node\n\nscrypt(key, salt, n, r, p, dklen, progressCb) // returns Buffer\n```\n\n### The progress callback\n\nThis callback (`progressCb` in the above example) is not available on Node.\n\nEvery 1000 iterations it will return an object with the following properties:\n- `current` - Current iteration number.\n- `total` - Total iterations.\n- `percent` - Progress in percentage (double).\n\n## Other scrypt implementations\n\n- https://www.npmjs.com/package/scrypt: Uses the C implementation (version 1.2.0), both async and async.\n- https://www.npmjs.com/package/scrypt-hash: Uses the C implementation and offers only an async option.\n- https://www.npmjs.com/package/scryptsy: A pure Javacript implementation. Offers a progress callback.\n- https://www.npmjs.com/package/scrypt256-hash: Another C implementation. Doesn't seem to be maintained.\n- https://www.npmjs.com/package/scrypt-jane-hash: Uses an alternative C implementation (called scrypt-jane). Doesn't seem to be maintained.\n- https://www.npmjs.com/package/js-scrypt-em: Emscripten-compiled scrypt 1.1.6. Doesn't seem to be maintained.\n- https://www.npmjs.com/package/js-scrypt: Wraps `js-scrypt-em` and offers sync and async options. Doesn't seem to be maintained.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Alex Beregszaszi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/scrypt.js/-/scrypt.js-0.2.0.tgz#af8d1465b71e9990110bedfc593b9479e03a8ada",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/scrypt.js/-/scrypt.js-0.2.0.tgz",
    "hash": "af8d1465b71e9990110bedfc593b9479e03a8ada",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "af8d1465b71e9990110bedfc593b9479e03a8ada"
}