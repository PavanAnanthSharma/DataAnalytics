{"_id":"borc","_rev":"5-a96fa969c56daee70d61cfe2df214974","name":"borc","description":"Encode and parse data in the Concise Binary Object Representation (CBOR) data format (RFC7049).","dist-tags":{"latest":"2.0.3"},"versions":{"2.0.0":{"name":"borc","version":"2.0.0","description":"Encode and parse data in the Concise Binary Object Representation (CBOR) data format (RFC7049).","main":"./src/index.js","repository":{"type":"git","url":"git+https://github.com/dignifiedquire/borc.git"},"homepage":"https://github.com/dignifiedquire/borc.git","browser":{"fs":false},"scripts":{"lint-asm":"asmjs lib/*.asm.js","test":"aegir-test","test:browser":"aegir-test --env browser","test:node":"aegir-test --env node","lint":"aegir-lint","docs":"aegir-docs","release":"aegir-release --docs","release-minor":"aegir-release --type minor --docs","release-major":"aegir-release --type major --docs","build":"aegir-build","coverage":"aegir-coverage","coverage-publish":"aegir-coverage publish","bench":"node benchmarks/index"},"keywords":["coap","cbor","json","asm","asm.js"],"author":{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},"devDependencies":{"aegir":"^9.1.2","asm.js":"github:dherman/asm.js","cbor":"^3.0.0","chai":"^3.5.0","garbage":"0.0.0"},"license":"MIT","dependencies":{"bignumber.js":"~3.0.0","commander":"^2.9","ieee754":"^1.1.8","json-text-sequence":"^0.1"},"engines":{"node":">=4"},"contributors":[{"name":"Benjamin Cabé","email":"kartben@gmail.com"},{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"},{"name":"Joe Hildebrand","email":"joe+github@cursive.net"},{"name":"Patrick Gansterer","email":"paroga@paroga.com"},{"name":"Scorpi","email":"cobblebone@gmail.com"},{"name":"greenkeeperio-bot","email":"support@greenkeeper.io"}],"gitHead":"c6341582cefd367daaf5b59505c2c2a4a679683d","bugs":{"url":"https://github.com/dignifiedquire/borc/issues"},"_id":"borc@2.0.0","_shasum":"83637b6228492e9468fa255a7b1315f7a1b1418a","_from":".","_npmVersion":"3.10.10","_nodeVersion":"7.2.1","_npmUser":{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},"dist":{"shasum":"83637b6228492e9468fa255a7b1315f7a1b1418a","tarball":"https://registry.npmjs.org/borc/-/borc-2.0.0.tgz"},"maintainers":[{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/borc-2.0.0.tgz_1481455315573_0.5183790165465325"},"directories":{}},"2.0.1":{"name":"borc","version":"2.0.1","description":"Encode and parse data in the Concise Binary Object Representation (CBOR) data format (RFC7049).","main":"./src/index.js","repository":{"type":"git","url":"git+https://github.com/dignifiedquire/borc.git"},"homepage":"https://github.com/dignifiedquire/borc.git","browser":{"fs":false},"scripts":{"lint-asm":"asmjs lib/*.asm.js","test":"aegir-test","test:browser":"aegir-test --env browser","test:node":"aegir-test --env node","lint":"aegir-lint","docs":"aegir-docs","release":"aegir-release --docs","release-minor":"aegir-release --type minor --docs","release-major":"aegir-release --type major --docs","build":"aegir-build","coverage":"aegir-coverage","coverage-publish":"aegir-coverage publish","bench":"node benchmarks/index"},"keywords":["coap","cbor","json","asm","asm.js"],"author":{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},"devDependencies":{"aegir":"^9.1.2","asm.js":"github:dherman/asm.js","cbor":"^3.0.0","chai":"^3.5.0","garbage":"0.0.0"},"license":"MIT","dependencies":{"bignumber.js":"~3.0.0","commander":"^2.9","ieee754":"^1.1.8","json-text-sequence":"^0.1"},"engines":{"node":">=4"},"contributors":[{"name":"Benjamin Cabé","email":"kartben@gmail.com"},{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"},{"name":"Joe Hildebrand","email":"joe+github@cursive.net"},{"name":"Patrick Gansterer","email":"paroga@paroga.com"},{"name":"Scorpi","email":"cobblebone@gmail.com"},{"name":"greenkeeperio-bot","email":"support@greenkeeper.io"}],"gitHead":"7c5f752ab7ff03d4fb66699a21ea557a0557ac6a","bugs":{"url":"https://github.com/dignifiedquire/borc/issues"},"_id":"borc@2.0.1","_shasum":"dc00d4a641091112048de82727b7a0bc05826eed","_from":".","_npmVersion":"4.0.3","_nodeVersion":"7.2.1","_npmUser":{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},"dist":{"shasum":"dc00d4a641091112048de82727b7a0bc05826eed","tarball":"https://registry.npmjs.org/borc/-/borc-2.0.1.tgz"},"maintainers":[{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/borc-2.0.1.tgz_1481746894573_0.9205981509294361"},"directories":{}},"2.0.2":{"name":"borc","version":"2.0.2","description":"Encode and parse data in the Concise Binary Object Representation (CBOR) data format (RFC7049).","main":"./src/index.js","repository":{"type":"git","url":"git+https://github.com/dignifiedquire/borc.git"},"homepage":"https://github.com/dignifiedquire/borc.git","browser":{"fs":false},"scripts":{"lint-asm":"asmjs lib/*.asm.js","test":"aegir-test","test:browser":"aegir-test --env browser","test:node":"aegir-test --env node","lint":"aegir-lint","docs":"aegir-docs","release":"aegir-release --docs","release-minor":"aegir-release --type minor --docs","release-major":"aegir-release --type major --docs","build":"aegir-build","coverage":"aegir-coverage","coverage-publish":"aegir-coverage publish","bench":"node benchmarks/index"},"keywords":["coap","cbor","json","asm","asm.js"],"author":{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},"devDependencies":{"aegir":"^9.1.2","asm.js":"github:dherman/asm.js","cbor":"^3.0.0","chai":"^3.5.0","garbage":"0.0.0"},"license":"MIT","dependencies":{"bignumber.js":"~3.0.0","commander":"^2.9","ieee754":"^1.1.8","json-text-sequence":"^0.1"},"engines":{"node":">=4"},"contributors":[{"name":"Benjamin Cabé","email":"kartben@gmail.com"},{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"},{"name":"Joe Hildebrand","email":"joe+github@cursive.net"},{"name":"Patrick Gansterer","email":"paroga@paroga.com"},{"name":"Scorpi","email":"cobblebone@gmail.com"},{"name":"greenkeeperio-bot","email":"support@greenkeeper.io"}],"gitHead":"0704dbc713726d28619ee685e78e154deecf8e29","bugs":{"url":"https://github.com/dignifiedquire/borc/issues"},"_id":"borc@2.0.2","_shasum":"8eae1a4d599cfdfdfc9fa857cbba69c90e83291f","_from":".","_npmVersion":"4.0.3","_nodeVersion":"7.2.1","_npmUser":{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},"dist":{"shasum":"8eae1a4d599cfdfdfc9fa857cbba69c90e83291f","tarball":"https://registry.npmjs.org/borc/-/borc-2.0.2.tgz"},"maintainers":[{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/borc-2.0.2.tgz_1485720745480_0.9245984109584242"},"directories":{}},"2.0.3":{"name":"borc","version":"2.0.3","description":"Encode and parse data in the Concise Binary Object Representation (CBOR) data format (RFC7049).","main":"./src/index.js","repository":{"type":"git","url":"git+https://github.com/dignifiedquire/borc.git"},"homepage":"https://github.com/dignifiedquire/borc.git","browser":{"fs":false},"scripts":{"test":"aegir test --files test/**/*.spec.js","test:browser":"aegir test --target browser","test:node":"aegir test --target node","lint":"aegir lint","docs":"aegir docs","release":"aegir release --docs","release-minor":"aegir release --type minor","release-major":"aegir release --type major","build":"aegir build","coverage":"aegir coverage","coverage-publish":"aegir coverage --upload","bench":"node benchmarks/index.js","bench-browser":"budo benchmarks/index.js"},"keywords":["coap","cbor","json","asm","asm.js"],"author":{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},"devDependencies":{"aegir":"^13.0.6","benchmark":"^2.1.0","budo":"^11.2.0","cbor":"^4.0.0","chai":"^4.1.2","dirty-chai":"^2.0.1","garbage":"0.0.0"},"license":"MIT","dependencies":{"bignumber.js":"^6.0.0","commander":"^2.15.0","ieee754":"^1.1.8","json-text-sequence":"^0.1"},"engines":{"node":">=4"},"contributors":[{"name":"Benjamin Cabé","email":"kartben@gmail.com"},{"name":"Dan Finlay","email":"542863+danfinlay@users.noreply.github.com"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"},{"name":"Joe Hildebrand","email":"joe+github@cursive.net"},{"name":"Patrick Gansterer","email":"paroga@paroga.com"},{"name":"Ryan Pendergast","email":"ryan.pendergast@gmail.com"},{"name":"Scorpi","email":"cobblebone@gmail.com"},{"name":"Tobias Wich","email":"tobias.wich@ecsec.de"},{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},{"name":"greenkeeperio-bot","email":"support@greenkeeper.io"}],"gitHead":"24079c58ff1f50307543f3703bc5a6fc44e8a087","bugs":{"url":"https://github.com/dignifiedquire/borc/issues"},"_id":"borc@2.0.3","_npmVersion":"5.6.0","_nodeVersion":"9.7.1","_npmUser":{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},"dist":{"integrity":"sha512-2mfipKUXn7yLgwn8D5jZkJqd2ZyzqmYZQX/9d4On33oGNDLwxj5qQMst+nkKyEdaujQRFfrZCId+k8wehQVANg==","shasum":"08845ea73a6d3211120928ee3929f8dc2de9f52e","tarball":"https://registry.npmjs.org/borc/-/borc-2.0.3.tgz","fileCount":31,"unpackedSize":1118884,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa6aDpCRA9TVsSAnZWagAALbcP/3NTIZlBjdABbh7oLkxI\nj3y59DWe5guorzTRi/v8vTHj6jxcOy8345ALMvF9yE7d8O4IHuaz+g7RsQzf\nSW0jJ1Rdc74K1ocqHScihxXhZ99RT51IMR8u0+3U7TcWPgJRw4oHL4drjo+f\nrQLgE5as6IUzRTrsQ2ddNgWtbJX3kVaBKgg9Flk/FgBL7IjT/9mPinprWQi1\n3Tp6N2ndr+MeyP0f3Dcu29j1QNn9QFBuJW5jQfJ2eOKMtDDM+odBSD08Tmw1\n43gVsL7UCCsO+wnXEL/E1HWcCbOcEoWD3M2Z3hD+fQAXTRsspK57XeHTI3ER\nO9az4O+5Qh6r1CUatNuUkxS71kdnsu6o5bs5pQ7Yh+9oXF9POp5Hbq5ioCfe\nA8flge8I/L3mBlYJTM2nqr8TlfwwPq9W0A9kBSLVht7J/KhzizL0rABctUTD\nYrfbmNjS8Ai4nAmOjMGoSq7a0ZaECdTQYdB0Bi4zuBDAQDQ1/0qFFUx1tN0S\nGf3jOjSDjsAQ0Iak6qWB6LYlUhYTuViOzznPUlsSFHGqemxQ00DmT/p+CHi5\njAYV019GD5JsXD9mli1JqjVGpmQmV1Q7KWvGTNW3NHwGwZD2DD4W6n4Rp05y\n5DMxh1Z7k1frEaY6vfKmpwueCgloocmpIqSCCpWJSmokSLcRm6VpWry7D21x\n3L3B\r\n=cbzU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"daviddias","email":"daviddias.p@gmail.com"},{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/borc_2.0.3_1525260520394_0.6060915968001419"}}},"readme":"# borc\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io/)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Coverage Status](https://coveralls.io/repos/github/dignifiedquire/borc/badge.svg?branch=master)](https://coveralls.io/github/dignifiedquire/borc?branch=master)\n[![Dependency Status](https://david-dm.org/dignifiedquire/borc.svg?style=flat-square)](https://david-dm.org/dignifiedquire/borc)\n[![Travis CI](https://travis-ci.org/dignifiedquire/borc.svg?branch=master)](https://travis-ci.org/dignifiedquire/borc)\n[![Circle CI](https://circleci.com/gh/dignifiedquire/borc.svg?style=svg)](https://circleci.com/gh/dignifiedquire/borc)\n\n\n> Assimilate all your JavaScript objects into the Concise Binary Object Representation (CBOR) data format ([RFC7049](http://tools.ietf.org/html/rfc7049)) **as fast as possible**.\n\n\n## About\n\nThis library is a fork of the awesome [node-cbor](https://github.com/hildjj/node-cbor). It borrows a lot of the interface, but drops all streaming and async processing in favor of a minimal syn api and being as fast as possible.\n\n\n## Installation\n\n```bash\n$ npm install --save borc\n```\n\n## Benchmarks\n\nTODO\n\n## Example\n\n```javascript\nconst cbor = require('borc')\nconst assert = require('assert')\n\nconst encoded = cbor.encode(true) // returns <Buffer f5>\nconst decoded = cbor.decodeFirst(encoded)\n// decoded is the unpacked object\nassert.ok(decoded === true)\n\n// Use integers as keys\nvar m = new Map()\nm.set(1, 2)\nencoded = cbor.encode(m) // <Buffer a1 01 02>\n```\n\n## API\n\nSee https://dignifiedquire.github.io/borc for details\n\nThe sync encoding and decoding are exported as a\n[leveldb encoding](https://github.com/Level/levelup#custom_encodings), as\n`cbor.leveldb`.\n\n## Supported types\n\nThe following types are supported for encoding:\n\n* boolean\n* number (including -0, NaN, and ±Infinity)\n* string\n* Array, Set (encoded as Array)\n* Object (including null), Map\n* undefined\n* Buffer\n* Date,\n* RegExp\n* url.URL\n* [bignumber](https://github.com/MikeMcl/bignumber.js)\n\nDecoding supports the above types, including the following CBOR tag numbers:\n\n| Tag | Generated Type |\n|-----|----------------|\n| 0   | Date           |\n| 1   | Date           |\n| 2   | bignumber      |\n| 3   | bignumber      |\n| 4   | bignumber      |\n| 5   | bignumber      |\n| 32  | url.URL        |\n| 35  | RegExp         |\n\n\n## Customizations\n\nBorc supports custom tags as well as custom input types.\n\n### Encode Custom Types\n\n```js\nclass MyType {\n  constructor (val) {\n    this.val = val\n  }\n\n  // Gets called when encoding this object\n  // gen - instance of the encoder\n  // obj - the object being encoded\n  //\n  // should return true on success and false otherwise\n  encodeCBOR (gen) {\n    return gen.pushAny('mytype:' + this.val)\n  }\n}\n\ncbor.encode([new MyType('hello')])\n```\n\n### Encode Custom Tags\n\n```js\ncbor.encode([new cbor.Tagged(42, 'hello')])\n```\n\n### Decode Custom Tags\n\n```js\nconst decoder = new cbor.Decoder({\n  tags: {\n    42: (val) => val + ' world'\n  }\n})\n```\n\n## License\n\nMIT\n","maintainers":[{"name":"daviddias","email":"daviddias.p@gmail.com"},{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"}],"time":{"modified":"2018-05-02T11:28:43.732Z","created":"2016-12-11T11:21:58.011Z","2.0.0":"2016-12-11T11:21:58.011Z","2.0.1":"2016-12-14T20:21:36.473Z","2.0.2":"2017-01-29T20:12:26.026Z","2.0.3":"2018-05-02T11:28:40.517Z"},"homepage":"https://github.com/dignifiedquire/borc.git","keywords":["coap","cbor","json","asm","asm.js"],"repository":{"type":"git","url":"git+https://github.com/dignifiedquire/borc.git"},"contributors":[{"name":"Benjamin Cabé","email":"kartben@gmail.com"},{"name":"Dan Finlay","email":"542863+danfinlay@users.noreply.github.com"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net"},{"name":"Joe Hildebrand","email":"joe+github@cursive.net"},{"name":"Patrick Gansterer","email":"paroga@paroga.com"},{"name":"Ryan Pendergast","email":"ryan.pendergast@gmail.com"},{"name":"Scorpi","email":"cobblebone@gmail.com"},{"name":"Tobias Wich","email":"tobias.wich@ecsec.de"},{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},{"name":"greenkeeperio-bot","email":"support@greenkeeper.io"}],"author":{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},"bugs":{"url":"https://github.com/dignifiedquire/borc/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"52bdf313c98e4e27557f884042ebc4ff\"","_lastModified":"Sat, 26 May 2018 18:47:32 GMT","_cached":true}